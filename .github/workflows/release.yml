name: Release

on:
  push:
    branches:
      - master
      - next

jobs:
  test:
    runs-on: ubuntu-latest
    name: Check the Codebase
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]
        poetry-version: [ 1.1.4 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Cache Poetry
        uses: actions/cache@v2
        env:
          cache-name: cache-poetry
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install

      - name: Lint files
        run: |
          poetry check
          poetry run flakehell lint
          poetry run black --check .

      - name: Run tests
        run: |
          poetry run pytest

      - name: Coveralls
        run: |
          poetry run coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

      - name: HACS Validation
        uses: hacs/action@main
        with:
          category: integration

  release:
    runs-on: ubuntu-latest
    name: Release
    if: github.ref == 'refs/heads/master'
    needs:
      - test
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Setup Git
        run: |
          git config --local user.email "${{ env.GITHUB_ACTION }}+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch --tags

      - name: Versioning and Changelog
        run: |
          npx standard-version -i release-CHANGELOG.md --skip.commit --skip.tag
          npx standard-version

      - name: Push to Repository
        run: |
          git push --follow-tags

      - name: Get Tag for Release
        run: |
          echo "TAG_NAME=`git describe --abbrev=0 --match "v*"`" >> $GITHUB_ENV

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "release-CHANGELOG.md"
          name: '${{ env.TAG_NAME }}'
          tag: '${{ env.TAG_NAME }}'
          token: '${{ secrets.GITHUB_TOKEN }}'
