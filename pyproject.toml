[build-system]
requires = [
    "poetry>=1.5.1"
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "onyx-homeassistant-integration"
version = "0.0.0"
description = "Home Assistant Integration for Hella's ONYX.CENTER API."
license = "MIT"
authors = [
    "Daniel Muehlbachler-Pietrzykowski <daniel.muehlbachler@niftyside.io>"
]
readme = "README.md"
repository = "https://github.com/muhlba91/onyx-homeassistant-integration"
keywords = [
    "hella",
    "onxy",
    "raspberrypi",
    "homeassistant"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = "^3.10"
onyx-client = "^6.1.0"

[tool.poetry.dev-dependencies]
pytest = "^7.3.1"
pytest-cov = { extras = ["toml"], version = "^4.1.0" }
flakeheaven = "^3.3.0"
coverage = { extras = ["toml"], version = "^7.0.0" }
black = "^23.3.0"
pre-commit = "^3.3.2"
pytest-asyncio = "^0.21.0"
aioresponses = "^0.7.4"
homeassistant = "^2023.5.4"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers --cov=custom_components"
testpaths = [
    "tests",
]
norecursedirs = [
    ".git",
]

[tool.coverage.run]
relative_files = true
source = [
    "custom_components",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplemented()",
    "if __name__ == .__main__.:",
    "main()",
    "parser\\..",
    "argparse\\..",
]
fail_under = 91
show_missing = true

[tool.flakeheaven]
exclude = [
    "README.md"
]
format = "colored"
max_line_length = 88
show_source = true
whitelist = ".flake8.whitelist"

[tool.flakeheaven.plugins]
flake8-bandit = [
    "+*",
    "-S322"
]
flake8-bugbear = [
    "+*"
]
flake8-builtins = [
    "+*"
]
flake8-comprehensions = [
    "+*"
]
flake8-darglint = [
    "+*"
]
flake8-docstrings = [
    "+*"
]
flake8-eradicate = [
    "+*"
]
flake8-isort = [
    "+*"
]
flake8-mutable = [
    "+*"
]
flake8-pytest-style = [
    "+*"
]
flake8-spellcheck = [
    "+*"
]
mccabe = [
    "+*"
]
pep8-naming = [
    "+*"
]
pycodestyle = [
    "+*",
    "-E402",
    "-E126",
    "-W503",
    "-E203",
    "-E722"
]
pyflakes = [
    "+*"
]
pylint = [
    "+*",
    "-C0330",
    "-C0326"
]

[tool.black]
line-length = 88
target-version = [
    "py38"
]
include = "\\.pyi?$"
exclude = """
(
  /(
      \\.eggs         # exclude a few common directories in the
    | \\.git          # root of the project
    | \\.hg
    | \\.mypy_cache
    | \\.tox
    | \\.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
"""
